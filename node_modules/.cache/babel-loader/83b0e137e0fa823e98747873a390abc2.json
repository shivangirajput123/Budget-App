{"ast":null,"code":"var _jsxFileName = \"/home/shivangi/Desktop/projects/react-budget-app/src/components/Budget.js\";\nimport React, { useState, useContext } from 'react';\nimport ViewBudget from './ViewBudget';\nimport EditBudget from './EditBudget';\nimport { AppContext } from '../context/AppContext';\n\nconst Budget = () => {\n  const {\n    budget,\n    dispatch\n  } = useContext(AppContext);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n\n  const handleSaveClick = value => {\n    dispatch({\n      type: 'SET_BUDGET',\n      payload: value\n    });\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"alert alert-secondary p-3 d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, isEditing ? /*#__PURE__*/React.createElement(EditBudget, {\n    handleSaveClick: handleSaveClick,\n    budget: budget,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }) :\n  /*#__PURE__*/\n  // For part 1 render component inline rather than create a seperate one\n  React.createElement(ViewBudget, {\n    handleEditClick: handleEditClick,\n    budget: budget,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default Budget;","map":{"version":3,"sources":["/home/shivangi/Desktop/projects/react-budget-app/src/components/Budget.js"],"names":["React","useState","useContext","ViewBudget","EditBudget","AppContext","Budget","budget","dispatch","isEditing","setIsEditing","handleEditClick","handleSaveClick","value","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBN,UAAU,CAACG,UAAD,CAAvC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMU,eAAe,GAAG,MAAM;AAC7BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,GAFD;;AAIA,QAAME,eAAe,GAAIC,KAAD,IAAW;AAClCL,IAAAA,QAAQ,CAAC;AACRM,MAAAA,IAAI,EAAE,YADE;AAERC,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIAH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,GAND;;AAQA,sBACC;AAAK,IAAA,KAAK,EAAC,6EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,SAAS,gBACT,oBAAC,UAAD;AAAY,IAAA,eAAe,EAAEG,eAA7B;AAA8C,IAAA,MAAM,EAAEL,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS;AAAA;AAGT;AACA,sBAAC,UAAD;AAAY,IAAA,eAAe,EAAEI,eAA7B;AAA8C,IAAA,MAAM,EAAEJ,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADD;AAUA,CA1BD;;AA4BA,eAAeD,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport ViewBudget from './ViewBudget';\nimport EditBudget from './EditBudget';\nimport { AppContext } from '../context/AppContext';\n\nconst Budget = () => {\n\tconst { budget, dispatch } = useContext(AppContext);\n\tconst [isEditing, setIsEditing] = useState(false);\n\n\tconst handleEditClick = () => {\n\t\tsetIsEditing(true);\n\t};\n\n\tconst handleSaveClick = (value) => {\n\t\tdispatch({\n\t\t\ttype: 'SET_BUDGET',\n\t\t\tpayload: value,\n\t\t});\n\t\tsetIsEditing(false);\n\t};\n\n\treturn (\n\t\t<div class='alert alert-secondary p-3 d-flex align-items-center justify-content-between'>\n\t\t\t{isEditing ? (\n\t\t\t\t<EditBudget handleSaveClick={handleSaveClick} budget={budget} />\n\t\t\t) : (\n\t\t\t\t// For part 1 render component inline rather than create a seperate one\n\t\t\t\t<ViewBudget handleEditClick={handleEditClick} budget={budget} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Budget;\n"]},"metadata":{},"sourceType":"module"}